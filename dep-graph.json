{
  "graph": {
    "nodes": {
      "langgraph-modules/workflow-engine": {
        "name": "langgraph-modules/workflow-engine",
        "type": "lib",
        "data": {
          "root": "libs/langgraph-modules/workflow-engine",
          "projectType": "library",
          "targets": {
            "typecheck": {
              "dependsOn": ["build", "^typecheck"],
              "options": {
                "cwd": "libs/langgraph-modules/workflow-engine",
                "command": "tsc --build --emitDeclarationOnly"
              },
              "cache": true,
              "inputs": [
                "production",
                "^production",
                {
                  "externalDependencies": ["typescript"]
                }
              ],
              "outputs": [
                "{projectRoot}/**/*.js",
                "{projectRoot}/**/*.cjs",
                "{projectRoot}/**/*.mjs",
                "{projectRoot}/**/*.jsx",
                "{projectRoot}/**/*.js.map",
                "{projectRoot}/**/*.jsx.map",
                "{projectRoot}/**/*.d.ts",
                "{projectRoot}/**/*.d.cts",
                "{projectRoot}/**/*.d.mts",
                "{projectRoot}/**/*.d.ts.map",
                "{projectRoot}/**/*.d.cts.map",
                "{projectRoot}/**/*.d.mts.map",
                "{projectRoot}/tsconfig.tsbuildinfo",
                "{projectRoot}/dist/**/*.d.ts",
                "{projectRoot}/dist/tsconfig.lib.tsbuildinfo",
                "{projectRoot}/out-tsc/jest/**/*.d.ts",
                "{projectRoot}/out-tsc/jest/tsconfig.tsbuildinfo"
              ],
              "syncGenerators": ["@nx/js:typescript-sync"],
              "metadata": {
                "technologies": ["typescript"],
                "description": "Runs type-checking for the project.",
                "help": {
                  "command": "npx tsc --build --help",
                  "example": {
                    "args": ["--force"]
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/js:tsc",
              "outputs": ["{options.outputPath}"],
              "options": {
                "outputPath": "dist/libs/langgraph-modules/workflow-engine",
                "tsConfig": "libs/langgraph-modules/workflow-engine/tsconfig.lib.json",
                "packageJson": "libs/langgraph-modules/workflow-engine/package.json",
                "main": "libs/langgraph-modules/workflow-engine/src/index.ts",
                "assets": ["libs/langgraph-modules/workflow-engine/*.md"]
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "dependsOn": ["^build"],
              "inputs": ["production", "^production"]
            },
            "build-deps": {
              "dependsOn": ["^build"],
              "configurations": {},
              "options": {},
              "parallelism": true,
              "executor": "nx:noop"
            },
            "watch-deps": {
              "continuous": true,
              "dependsOn": ["build-deps"],
              "executor": "nx:run-commands",
              "options": {
                "command": "npx nx watch --projects langgraph-modules/workflow-engine --includeDependentProjects -- npx nx build-deps langgraph-modules/workflow-engine"
              },
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "cache": true,
              "options": {
                "cwd": "libs/langgraph-modules/workflow-engine",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{workspaceRoot}/libs/langgraph-modules/workflow-engine/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": ["eslint"]
                }
              ],
              "outputs": ["{options.outputFile}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "npx eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "options": {
                "cwd": "libs/langgraph-modules/workflow-engine",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "npx jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}\\jest.preset.js",
                {
                  "externalDependencies": ["jest"]
                }
              ],
              "outputs": ["{projectRoot}\\test-output\\jest\\coverage"],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["^build"]
            }
          },
          "name": "langgraph-modules/workflow-engine",
          "tags": ["npm:private", "domain:langgraph"],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@langgraph-modules/workflow-engine",
              "packageExports": {
                "./package.json": "./package.json",
                ".": {
                  "development": "./src/index.ts",
                  "types": "./dist/index.d.ts",
                  "import": "./dist/index.js",
                  "default": "./dist/index.js"
                }
              },
              "packageMain": "./dist/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "implicitDependencies": []
        }
      },
      "langgraph-modules/functional-api": {
        "name": "langgraph-modules/functional-api",
        "type": "lib",
        "data": {
          "root": "libs/langgraph-modules/functional-api",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "libs/langgraph-modules/functional-api",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{workspaceRoot}/libs/langgraph-modules/functional-api/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": ["eslint"]
                }
              ],
              "outputs": ["{options.outputFile}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "npx eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "options": {
                "cwd": "libs/langgraph-modules/functional-api",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "npx jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}\\jest.preset.js",
                {
                  "externalDependencies": ["jest"]
                }
              ],
              "outputs": ["{projectRoot}\\test-output\\jest\\coverage"],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["^build"]
            },
            "typecheck": {
              "dependsOn": ["^typecheck"],
              "options": {
                "cwd": "libs/langgraph-modules/functional-api",
                "command": "tsc --build --emitDeclarationOnly"
              },
              "cache": true,
              "inputs": [
                "production",
                {
                  "dependentTasksOutputFiles": "**/*.d.ts"
                },
                {
                  "externalDependencies": ["typescript"]
                }
              ],
              "outputs": [
                "{projectRoot}/**/*.js",
                "{projectRoot}/**/*.cjs",
                "{projectRoot}/**/*.mjs",
                "{projectRoot}/**/*.jsx",
                "{projectRoot}/**/*.js.map",
                "{projectRoot}/**/*.jsx.map",
                "{projectRoot}/**/*.d.ts",
                "{projectRoot}/**/*.d.cts",
                "{projectRoot}/**/*.d.mts",
                "{projectRoot}/**/*.d.ts.map",
                "{projectRoot}/**/*.d.cts.map",
                "{projectRoot}/**/*.d.mts.map",
                "{projectRoot}/tsconfig.tsbuildinfo",
                "{projectRoot}/dist/**/*.d.ts",
                "{projectRoot}/dist/tsconfig.lib.tsbuildinfo",
                "{workspaceRoot}/libs/langgraph-modules/checkpoint/dist/**/*.d.ts",
                "{workspaceRoot}/libs/langgraph-modules/checkpoint/dist/tsconfig.lib.tsbuildinfo",
                "{projectRoot}/out-tsc/jest/**/*.d.ts",
                "{projectRoot}/out-tsc/jest/tsconfig.tsbuildinfo"
              ],
              "syncGenerators": ["@nx/js:typescript-sync"],
              "metadata": {
                "technologies": ["typescript"],
                "description": "Runs type-checking for the project.",
                "help": {
                  "command": "npx tsc --build --help",
                  "example": {
                    "args": ["--force"]
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            }
          },
          "projectType": "library",
          "name": "langgraph-modules/functional-api",
          "tags": ["npm:private", "domain:langgraph type:data-access"],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@langgraph-modules/functional-api",
              "packageExports": {
                ".": {
                  "types": "./src/index.ts",
                  "import": "./src/index.ts",
                  "default": "./src/index.ts"
                },
                "./package.json": "./package.json"
              },
              "packageMain": "./src/index.ts",
              "isInPackageManagerWorkspaces": true
            }
          },
          "$schema": "../../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "libs/langgraph-modules/functional-api/src",
          "implicitDependencies": []
        }
      },
      "dev-brand-api-e2e": {
        "name": "dev-brand-api-e2e",
        "type": "lib",
        "data": {
          "root": "apps/nestjs-ai-saas-starter-demo-e2e",
          "projectType": "library",
          "targets": {
            "typecheck": {
              "dependsOn": ["^typecheck"],
              "options": {
                "cwd": "apps/nestjs-ai-saas-starter-demo-e2e",
                "command": "tsc --build --emitDeclarationOnly"
              },
              "cache": true,
              "inputs": [
                "production",
                "^production",
                {
                  "externalDependencies": ["typescript"]
                }
              ],
              "outputs": [
                "{projectRoot}/out-tsc/dev-brand-api-e2e/**/*.d.ts",
                "{projectRoot}/out-tsc/dev-brand-api-e2e/tsconfig.tsbuildinfo"
              ],
              "syncGenerators": ["@nx/js:typescript-sync"],
              "metadata": {
                "technologies": ["typescript"],
                "description": "Runs type-checking for the project.",
                "help": {
                  "command": "npx tsc --build --help",
                  "example": {
                    "args": ["--force"]
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "cache": true,
              "options": {
                "cwd": "apps/nestjs-ai-saas-starter-demo-e2e",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{workspaceRoot}/apps/nestjs-ai-saas-starter-demo-e2e/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": ["eslint"]
                }
              ],
              "outputs": ["{options.outputFile}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "npx eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "e2e": {
              "executor": "@nx/jest:jest",
              "outputs": ["{projectRoot}/test-output/jest/coverage"],
              "options": {
                "jestConfig": "apps/nestjs-ai-saas-starter-demo-e2e/jest.config.ts",
                "passWithNoTests": true
              },
              "dependsOn": ["dev-brand-api:build", "dev-brand-api:serve"],
              "configurations": {},
              "parallelism": true
            }
          },
          "name": "dev-brand-api-e2e",
          "tags": ["npm:private"],
          "implicitDependencies": ["dev-brand-api"],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "dev-brand-api-e2e",
              "isInPackageManagerWorkspaces": true
            }
          }
        }
      },
      "langgraph-modules/multi-agent": {
        "name": "langgraph-modules/multi-agent",
        "type": "lib",
        "data": {
          "root": "libs/langgraph-modules/multi-agent",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "libs/langgraph-modules/multi-agent",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{workspaceRoot}/libs/langgraph-modules/multi-agent/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": ["eslint"]
                }
              ],
              "outputs": ["{options.outputFile}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "npx eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "options": {
                "cwd": "libs/langgraph-modules/multi-agent",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "npx jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}\\jest.preset.js",
                {
                  "externalDependencies": ["jest"]
                }
              ],
              "outputs": ["{projectRoot}\\test-output\\jest\\coverage"],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["^build"]
            },
            "typecheck": {
              "dependsOn": ["^typecheck"],
              "options": {
                "cwd": "libs/langgraph-modules/multi-agent",
                "command": "tsc --build --emitDeclarationOnly"
              },
              "cache": true,
              "inputs": [
                "production",
                "^production",
                {
                  "externalDependencies": ["typescript"]
                }
              ],
              "outputs": [
                "{projectRoot}/**/*.js",
                "{projectRoot}/**/*.cjs",
                "{projectRoot}/**/*.mjs",
                "{projectRoot}/**/*.jsx",
                "{projectRoot}/**/*.js.map",
                "{projectRoot}/**/*.jsx.map",
                "{projectRoot}/**/*.d.ts",
                "{projectRoot}/**/*.d.cts",
                "{projectRoot}/**/*.d.mts",
                "{projectRoot}/**/*.d.ts.map",
                "{projectRoot}/**/*.d.cts.map",
                "{projectRoot}/**/*.d.mts.map",
                "{projectRoot}/tsconfig.tsbuildinfo",
                "{projectRoot}/dist/**/*.d.ts",
                "{projectRoot}/dist/tsconfig.lib.tsbuildinfo",
                "{projectRoot}/out-tsc/jest/**/*.d.ts",
                "{projectRoot}/out-tsc/jest/tsconfig.tsbuildinfo"
              ],
              "syncGenerators": ["@nx/js:typescript-sync"],
              "metadata": {
                "technologies": ["typescript"],
                "description": "Runs type-checking for the project.",
                "help": {
                  "command": "npx tsc --build --help",
                  "example": {
                    "args": ["--force"]
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            }
          },
          "projectType": "library",
          "name": "langgraph-modules/multi-agent",
          "tags": [
            "npm:private",
            "domain:langgraph",
            "type:feature",
            "module:multi-agent"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@langgraph-modules/multi-agent",
              "packageExports": {
                ".": {
                  "types": "./src/index.ts",
                  "import": "./src/index.ts",
                  "default": "./src/index.ts"
                },
                "./package.json": "./package.json"
              },
              "packageMain": "./src/index.ts",
              "isInPackageManagerWorkspaces": true
            }
          },
          "$schema": "../../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "libs/langgraph-modules/multi-agent/src",
          "implicitDependencies": []
        }
      },
      "langgraph-modules/time-travel": {
        "name": "langgraph-modules/time-travel",
        "type": "lib",
        "data": {
          "root": "libs/langgraph-modules/time-travel",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "libs/langgraph-modules/time-travel",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{workspaceRoot}/libs/langgraph-modules/time-travel/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": ["eslint"]
                }
              ],
              "outputs": ["{options.outputFile}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "npx eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "options": {
                "cwd": "libs/langgraph-modules/time-travel",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "npx jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}\\jest.preset.js",
                {
                  "externalDependencies": ["jest"]
                }
              ],
              "outputs": ["{projectRoot}\\test-output\\jest\\coverage"],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["^build"]
            },
            "typecheck": {
              "dependsOn": ["^typecheck"],
              "options": {
                "cwd": "libs/langgraph-modules/time-travel",
                "command": "tsc --build --emitDeclarationOnly"
              },
              "cache": true,
              "inputs": [
                "production",
                {
                  "dependentTasksOutputFiles": "**/*.d.ts"
                },
                {
                  "externalDependencies": ["typescript"]
                }
              ],
              "outputs": [
                "{projectRoot}/**/*.js",
                "{projectRoot}/**/*.cjs",
                "{projectRoot}/**/*.mjs",
                "{projectRoot}/**/*.jsx",
                "{projectRoot}/**/*.js.map",
                "{projectRoot}/**/*.jsx.map",
                "{projectRoot}/**/*.d.ts",
                "{projectRoot}/**/*.d.cts",
                "{projectRoot}/**/*.d.mts",
                "{projectRoot}/**/*.d.ts.map",
                "{projectRoot}/**/*.d.cts.map",
                "{projectRoot}/**/*.d.mts.map",
                "{projectRoot}/tsconfig.tsbuildinfo",
                "{projectRoot}/dist/**/*.d.ts",
                "{projectRoot}/dist/tsconfig.lib.tsbuildinfo",
                "{workspaceRoot}/libs/langgraph-modules/checkpoint/dist/**/*.d.ts",
                "{workspaceRoot}/libs/langgraph-modules/checkpoint/dist/tsconfig.lib.tsbuildinfo",
                "{projectRoot}/out-tsc/jest/**/*.d.ts",
                "{projectRoot}/out-tsc/jest/tsconfig.tsbuildinfo"
              ],
              "syncGenerators": ["@nx/js:typescript-sync"],
              "metadata": {
                "technologies": ["typescript"],
                "description": "Runs type-checking for the project.",
                "help": {
                  "command": "npx tsc --build --help",
                  "example": {
                    "args": ["--force"]
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            }
          },
          "projectType": "library",
          "name": "langgraph-modules/time-travel",
          "tags": [
            "npm:private",
            "domain:langgraph",
            "type:feature",
            "module:time-travel"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@langgraph-modules/time-travel",
              "packageExports": {
                ".": {
                  "types": "./src/index.ts",
                  "import": "./src/index.ts",
                  "default": "./src/index.ts"
                },
                "./package.json": "./package.json"
              },
              "packageMain": "./src/index.ts",
              "isInPackageManagerWorkspaces": true
            }
          },
          "$schema": "../../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "libs/langgraph-modules/time-travel/src",
          "implicitDependencies": []
        }
      },
      "langgraph-modules/checkpoint": {
        "name": "langgraph-modules/checkpoint",
        "type": "lib",
        "data": {
          "root": "libs/langgraph-modules/checkpoint",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "libs/langgraph-modules/checkpoint",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{workspaceRoot}/libs/langgraph-modules/checkpoint/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": ["eslint"]
                }
              ],
              "outputs": ["{options.outputFile}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "npx eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "options": {
                "cwd": "libs/langgraph-modules/checkpoint",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "npx jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}\\jest.preset.js",
                {
                  "externalDependencies": ["jest"]
                }
              ],
              "outputs": ["{projectRoot}\\test-output\\jest\\coverage"],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["^build"]
            },
            "typecheck": {
              "dependsOn": ["^typecheck"],
              "options": {
                "cwd": "libs/langgraph-modules/checkpoint",
                "command": "tsc --build --emitDeclarationOnly"
              },
              "cache": true,
              "inputs": [
                "production",
                "^production",
                {
                  "externalDependencies": ["typescript"]
                }
              ],
              "outputs": [
                "{projectRoot}/**/*.js",
                "{projectRoot}/**/*.cjs",
                "{projectRoot}/**/*.mjs",
                "{projectRoot}/**/*.jsx",
                "{projectRoot}/**/*.js.map",
                "{projectRoot}/**/*.jsx.map",
                "{projectRoot}/**/*.d.ts",
                "{projectRoot}/**/*.d.cts",
                "{projectRoot}/**/*.d.mts",
                "{projectRoot}/**/*.d.ts.map",
                "{projectRoot}/**/*.d.cts.map",
                "{projectRoot}/**/*.d.mts.map",
                "{projectRoot}/tsconfig.tsbuildinfo",
                "{projectRoot}/dist/**/*.d.ts",
                "{projectRoot}/dist/tsconfig.lib.tsbuildinfo",
                "{projectRoot}/out-tsc/jest/**/*.d.ts",
                "{projectRoot}/out-tsc/jest/tsconfig.tsbuildinfo"
              ],
              "syncGenerators": ["@nx/js:typescript-sync"],
              "metadata": {
                "technologies": ["typescript"],
                "description": "Runs type-checking for the project.",
                "help": {
                  "command": "npx tsc --build --help",
                  "example": {
                    "args": ["--force"]
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            }
          },
          "projectType": "library",
          "name": "langgraph-modules/checkpoint",
          "tags": [
            "npm:private",
            "domain:langgraph",
            "type:data-access",
            "module:checkpoint"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@langgraph-modules/checkpoint",
              "packageExports": {
                ".": {
                  "types": "./src/index.ts",
                  "import": "./src/index.ts",
                  "default": "./src/index.ts"
                },
                "./package.json": "./package.json"
              },
              "packageMain": "./src/index.ts",
              "isInPackageManagerWorkspaces": true
            }
          },
          "$schema": "../../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "libs/langgraph-modules/checkpoint/src",
          "implicitDependencies": []
        }
      },
      "langgraph-modules/monitoring": {
        "name": "langgraph-modules/monitoring",
        "type": "lib",
        "data": {
          "root": "libs/langgraph-modules/monitoring",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "libs/langgraph-modules/monitoring",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{workspaceRoot}/libs/langgraph-modules/monitoring/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": ["eslint"]
                }
              ],
              "outputs": ["{options.outputFile}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "npx eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "options": {
                "cwd": "libs/langgraph-modules/monitoring",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "npx jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}\\jest.preset.js",
                {
                  "externalDependencies": ["jest"]
                }
              ],
              "outputs": ["{projectRoot}\\test-output\\jest\\coverage"],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["^build"]
            },
            "typecheck": {
              "dependsOn": ["^typecheck"],
              "options": {
                "cwd": "libs/langgraph-modules/monitoring",
                "command": "tsc --build --emitDeclarationOnly"
              },
              "cache": true,
              "inputs": [
                "production",
                "^production",
                {
                  "externalDependencies": ["typescript"]
                }
              ],
              "outputs": [
                "{projectRoot}/**/*.js",
                "{projectRoot}/**/*.cjs",
                "{projectRoot}/**/*.mjs",
                "{projectRoot}/**/*.jsx",
                "{projectRoot}/**/*.js.map",
                "{projectRoot}/**/*.jsx.map",
                "{projectRoot}/**/*.d.ts",
                "{projectRoot}/**/*.d.cts",
                "{projectRoot}/**/*.d.mts",
                "{projectRoot}/**/*.d.ts.map",
                "{projectRoot}/**/*.d.cts.map",
                "{projectRoot}/**/*.d.mts.map",
                "{projectRoot}/tsconfig.tsbuildinfo",
                "{projectRoot}/dist/**/*.d.ts",
                "{projectRoot}/dist/tsconfig.lib.tsbuildinfo",
                "{projectRoot}/out-tsc/jest/**/*.d.ts",
                "{projectRoot}/out-tsc/jest/tsconfig.tsbuildinfo"
              ],
              "syncGenerators": ["@nx/js:typescript-sync"],
              "metadata": {
                "technologies": ["typescript"],
                "description": "Runs type-checking for the project.",
                "help": {
                  "command": "npx tsc --build --help",
                  "example": {
                    "args": ["--force"]
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            }
          },
          "projectType": "library",
          "name": "langgraph-modules/monitoring",
          "tags": ["npm:private", "domain:langgraph type:data-access"],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@langgraph-modules/monitoring",
              "packageExports": {
                ".": {
                  "types": "./src/index.ts",
                  "import": "./src/index.ts",
                  "default": "./src/index.ts"
                },
                "./package.json": "./package.json"
              },
              "packageMain": "./src/index.ts",
              "isInPackageManagerWorkspaces": true
            }
          },
          "$schema": "../../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "libs/langgraph-modules/monitoring/src",
          "implicitDependencies": []
        }
      },
      "dev-brand-api": {
        "name": "dev-brand-api",
        "type": "app",
        "data": {
          "root": "apps/nestjs-ai-saas-starter-demo",
          "projectType": "application",
          "targets": {
            "typecheck": {
              "dependsOn": ["^typecheck"],
              "options": {
                "cwd": "apps/nestjs-ai-saas-starter-demo",
                "command": "tsc --build --emitDeclarationOnly"
              },
              "cache": true,
              "inputs": [
                "production",
                {
                  "dependentTasksOutputFiles": "**/*.d.ts"
                },
                {
                  "externalDependencies": ["typescript"]
                }
              ],
              "outputs": [
                "{projectRoot}/**/*.js",
                "{projectRoot}/**/*.cjs",
                "{projectRoot}/**/*.mjs",
                "{projectRoot}/**/*.jsx",
                "{projectRoot}/**/*.js.map",
                "{projectRoot}/**/*.jsx.map",
                "{projectRoot}/**/*.d.ts",
                "{projectRoot}/**/*.d.cts",
                "{projectRoot}/**/*.d.mts",
                "{projectRoot}/**/*.d.ts.map",
                "{projectRoot}/**/*.d.cts.map",
                "{projectRoot}/**/*.d.mts.map",
                "{projectRoot}/tsconfig.tsbuildinfo",
                "{projectRoot}/dist/**/*.d.ts",
                "{projectRoot}/dist/tsconfig.app.tsbuildinfo",
                "{projectRoot}/out-tsc/jest/**/*.d.ts",
                "{projectRoot}/out-tsc/jest/tsconfig.tsbuildinfo"
              ],
              "syncGenerators": ["@nx/js:typescript-sync"],
              "metadata": {
                "technologies": ["typescript"],
                "description": "Runs type-checking for the project.",
                "help": {
                  "command": "npx tsc --build --help",
                  "example": {
                    "args": ["--force"]
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "cache": true,
              "dependsOn": ["^build"],
              "inputs": [
                "production",
                "^production",
                {
                  "externalDependencies": ["webpack-cli"]
                }
              ],
              "outputs": [
                "{workspaceRoot}/apps\\nestjs-ai-saas-starter-demo\\dist"
              ],
              "metadata": {
                "technologies": ["webpack"],
                "description": "Runs Webpack build",
                "help": {
                  "command": "npx webpack-cli build --help",
                  "example": {
                    "options": {
                      "json": "stats.json"
                    },
                    "args": ["--profile"]
                  }
                }
              },
              "syncGenerators": ["@nx/js:typescript-sync"],
              "executor": "nx:run-commands",
              "options": {
                "cwd": "apps/nestjs-ai-saas-starter-demo",
                "args": ["--node-env=production"],
                "command": "webpack-cli build"
              },
              "configurations": {
                "development": {
                  "args": ["--node-env=development"]
                }
              },
              "parallelism": true
            },
            "serve": {
              "continuous": true,
              "executor": "@nx/js:node",
              "defaultConfiguration": "development",
              "dependsOn": ["build"],
              "options": {
                "buildTarget": "dev-brand-api:build",
                "runBuildTargetDependencies": false
              },
              "configurations": {
                "development": {
                  "buildTarget": "dev-brand-api:build:development"
                },
                "production": {
                  "buildTarget": "dev-brand-api:build:production"
                }
              },
              "parallelism": true
            },
            "preview": {
              "continuous": true,
              "options": {
                "cwd": "apps/nestjs-ai-saas-starter-demo",
                "args": ["--node-env=production"],
                "command": "webpack-cli serve"
              },
              "metadata": {
                "technologies": ["webpack"],
                "description": "Starts Webpack dev server in production mode",
                "help": {
                  "command": "npx webpack-cli serve --help",
                  "example": {
                    "options": {
                      "args": ["--client-progress", "--history-api-fallback "]
                    }
                  }
                }
              },
              "syncGenerators": ["@nx/js:typescript-sync"],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "serve-static": {
              "continuous": true,
              "dependsOn": ["build"],
              "executor": "@nx/web:file-server",
              "options": {
                "buildTarget": "build",
                "spa": true
              },
              "syncGenerators": ["@nx/js:typescript-sync"],
              "configurations": {},
              "parallelism": true
            },
            "build-deps": {
              "dependsOn": ["^build"],
              "configurations": {},
              "options": {},
              "parallelism": true,
              "executor": "nx:noop"
            },
            "watch-deps": {
              "continuous": true,
              "dependsOn": ["build-deps"],
              "executor": "nx:run-commands",
              "options": {
                "command": "npx nx watch --projects dev-brand-api --includeDependentProjects -- npx nx build-deps dev-brand-api"
              },
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "cache": true,
              "options": {
                "cwd": "apps/nestjs-ai-saas-starter-demo",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{workspaceRoot}/apps/nestjs-ai-saas-starter-demo/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": ["eslint"]
                }
              ],
              "outputs": ["{options.outputFile}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "npx eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "npx jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}\\jest.preset.js",
                {
                  "externalDependencies": ["jest"]
                }
              ],
              "outputs": ["{projectRoot}\\test-output\\jest\\coverage"],
              "executor": "nx:run-commands",
              "options": {
                "cwd": "apps/nestjs-ai-saas-starter-demo",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest",
                "passWithNoTests": true
              },
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["^build"]
            }
          },
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "dev-brand-api",
              "isInPackageManagerWorkspaces": true
            }
          },
          "name": "dev-brand-api",
          "tags": ["npm:private"],
          "implicitDependencies": []
        }
      },
      "langgraph-modules/streaming": {
        "name": "langgraph-modules/streaming",
        "type": "lib",
        "data": {
          "root": "libs/langgraph-modules/streaming",
          "projectType": "library",
          "targets": {
            "typecheck": {
              "dependsOn": ["build", "^typecheck"],
              "options": {
                "cwd": "libs/langgraph-modules/streaming",
                "command": "tsc --build --emitDeclarationOnly"
              },
              "cache": true,
              "inputs": [
                "production",
                "^production",
                {
                  "externalDependencies": ["typescript"]
                }
              ],
              "outputs": [
                "{projectRoot}/**/*.js",
                "{projectRoot}/**/*.cjs",
                "{projectRoot}/**/*.mjs",
                "{projectRoot}/**/*.jsx",
                "{projectRoot}/**/*.js.map",
                "{projectRoot}/**/*.jsx.map",
                "{projectRoot}/**/*.d.ts",
                "{projectRoot}/**/*.d.cts",
                "{projectRoot}/**/*.d.mts",
                "{projectRoot}/**/*.d.ts.map",
                "{projectRoot}/**/*.d.cts.map",
                "{projectRoot}/**/*.d.mts.map",
                "{projectRoot}/tsconfig.tsbuildinfo",
                "{projectRoot}/dist/**/*.d.ts",
                "{projectRoot}/dist/tsconfig.lib.tsbuildinfo",
                "{projectRoot}/out-tsc/jest/**/*.d.ts",
                "{projectRoot}/out-tsc/jest/tsconfig.tsbuildinfo"
              ],
              "syncGenerators": ["@nx/js:typescript-sync"],
              "metadata": {
                "technologies": ["typescript"],
                "description": "Runs type-checking for the project.",
                "help": {
                  "command": "npx tsc --build --help",
                  "example": {
                    "args": ["--force"]
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/js:tsc",
              "outputs": ["{options.outputPath}"],
              "options": {
                "outputPath": "dist/libs/langgraph-modules/streaming",
                "tsConfig": "libs/langgraph-modules/streaming/tsconfig.lib.json",
                "packageJson": "libs/langgraph-modules/streaming/package.json",
                "main": "libs/langgraph-modules/streaming/src/index.ts",
                "assets": ["libs/langgraph-modules/streaming/*.md"]
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "dependsOn": ["^build"],
              "inputs": ["production", "^production"]
            },
            "build-deps": {
              "dependsOn": ["^build"],
              "configurations": {},
              "options": {},
              "parallelism": true,
              "executor": "nx:noop"
            },
            "watch-deps": {
              "continuous": true,
              "dependsOn": ["build-deps"],
              "executor": "nx:run-commands",
              "options": {
                "command": "npx nx watch --projects langgraph-modules/streaming --includeDependentProjects -- npx nx build-deps langgraph-modules/streaming"
              },
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "cache": true,
              "options": {
                "cwd": "libs/langgraph-modules/streaming",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{workspaceRoot}/libs/langgraph-modules/streaming/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": ["eslint"]
                }
              ],
              "outputs": ["{options.outputFile}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "npx eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "options": {
                "cwd": "libs/langgraph-modules/streaming",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "npx jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}\\jest.preset.js",
                {
                  "externalDependencies": ["jest"]
                }
              ],
              "outputs": ["{projectRoot}\\test-output\\jest\\coverage"],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["^build"]
            }
          },
          "name": "langgraph-modules/streaming",
          "tags": [
            "npm:private",
            "domain:langgraph",
            "type:data-access",
            "module:streaming"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@langgraph-modules/streaming",
              "packageExports": {
                "./package.json": "./package.json",
                ".": {
                  "development": "./src/index.ts",
                  "types": "./dist/index.d.ts",
                  "import": "./dist/index.js",
                  "default": "./dist/index.js"
                }
              },
              "packageMain": "./dist/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "$schema": "../../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "libs/langgraph-modules/streaming/src",
          "implicitDependencies": []
        }
      },
      "langgraph-modules/platform": {
        "name": "langgraph-modules/platform",
        "type": "lib",
        "data": {
          "root": "libs/langgraph-modules/platform",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "libs/langgraph-modules/platform",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{workspaceRoot}/libs/langgraph-modules/platform/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": ["eslint"]
                }
              ],
              "outputs": ["{options.outputFile}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "npx eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "options": {
                "cwd": "libs/langgraph-modules/platform",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "npx jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}\\jest.preset.js",
                {
                  "externalDependencies": ["jest"]
                }
              ],
              "outputs": ["{projectRoot}\\test-output\\jest\\coverage"],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["^build"]
            },
            "typecheck": {
              "dependsOn": ["^typecheck"],
              "options": {
                "cwd": "libs/langgraph-modules/platform",
                "command": "tsc --build --emitDeclarationOnly"
              },
              "cache": true,
              "inputs": [
                "production",
                "^production",
                {
                  "externalDependencies": ["typescript"]
                }
              ],
              "outputs": [
                "{projectRoot}/**/*.js",
                "{projectRoot}/**/*.cjs",
                "{projectRoot}/**/*.mjs",
                "{projectRoot}/**/*.jsx",
                "{projectRoot}/**/*.js.map",
                "{projectRoot}/**/*.jsx.map",
                "{projectRoot}/**/*.d.ts",
                "{projectRoot}/**/*.d.cts",
                "{projectRoot}/**/*.d.mts",
                "{projectRoot}/**/*.d.ts.map",
                "{projectRoot}/**/*.d.cts.map",
                "{projectRoot}/**/*.d.mts.map",
                "{projectRoot}/tsconfig.tsbuildinfo",
                "{projectRoot}/dist/**/*.d.ts",
                "{projectRoot}/dist/tsconfig.lib.tsbuildinfo",
                "{projectRoot}/out-tsc/jest/**/*.d.ts",
                "{projectRoot}/out-tsc/jest/tsconfig.tsbuildinfo"
              ],
              "syncGenerators": ["@nx/js:typescript-sync"],
              "metadata": {
                "technologies": ["typescript"],
                "description": "Runs type-checking for the project.",
                "help": {
                  "command": "npx tsc --build --help",
                  "example": {
                    "args": ["--force"]
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            }
          },
          "projectType": "library",
          "name": "langgraph-modules/platform",
          "tags": ["npm:private", "domain:langgraph type:data-access"],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@langgraph-modules/platform",
              "packageExports": {
                ".": {
                  "types": "./src/index.ts",
                  "import": "./src/index.ts",
                  "default": "./src/index.ts"
                },
                "./package.json": "./package.json"
              },
              "packageMain": "./src/index.ts",
              "isInPackageManagerWorkspaces": true
            }
          },
          "$schema": "../../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "libs/langgraph-modules/platform/src",
          "implicitDependencies": []
        }
      },
      "langgraph-modules/memory": {
        "name": "langgraph-modules/memory",
        "type": "lib",
        "data": {
          "root": "libs/langgraph-modules/memory",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "libs/langgraph-modules/memory",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{workspaceRoot}/libs/langgraph-modules/memory/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": ["eslint"]
                }
              ],
              "outputs": ["{options.outputFile}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "npx eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "options": {
                "cwd": "libs/langgraph-modules/memory",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "npx jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}\\jest.preset.js",
                {
                  "externalDependencies": ["jest"]
                }
              ],
              "outputs": ["{projectRoot}\\test-output\\jest\\coverage"],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["^build"]
            },
            "typecheck": {
              "dependsOn": ["^typecheck"],
              "options": {
                "cwd": "libs/langgraph-modules/memory",
                "command": "tsc --build --emitDeclarationOnly"
              },
              "cache": true,
              "inputs": [
                "production",
                {
                  "dependentTasksOutputFiles": "**/*.d.ts"
                },
                {
                  "externalDependencies": ["typescript"]
                }
              ],
              "outputs": [
                "{projectRoot}/**/*.js",
                "{projectRoot}/**/*.cjs",
                "{projectRoot}/**/*.mjs",
                "{projectRoot}/**/*.jsx",
                "{projectRoot}/**/*.js.map",
                "{projectRoot}/**/*.jsx.map",
                "{projectRoot}/**/*.d.ts",
                "{projectRoot}/**/*.d.cts",
                "{projectRoot}/**/*.d.mts",
                "{projectRoot}/**/*.d.ts.map",
                "{projectRoot}/**/*.d.cts.map",
                "{projectRoot}/**/*.d.mts.map",
                "{projectRoot}/tsconfig.tsbuildinfo",
                "{projectRoot}/dist/**/*.d.ts",
                "{projectRoot}/dist/tsconfig.lib.tsbuildinfo",
                "{projectRoot}/out-tsc/jest/**/*.d.ts",
                "{projectRoot}/out-tsc/jest/tsconfig.tsbuildinfo"
              ],
              "syncGenerators": ["@nx/js:typescript-sync"],
              "metadata": {
                "technologies": ["typescript"],
                "description": "Runs type-checking for the project.",
                "help": {
                  "command": "npx tsc --build --help",
                  "example": {
                    "args": ["--force"]
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            }
          },
          "projectType": "library",
          "name": "langgraph-modules/memory",
          "tags": [
            "npm:private",
            "domain:langgraph",
            "type:data-access",
            "module:memory"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@langgraph-modules/memory",
              "packageExports": {
                ".": {
                  "types": "./src/index.ts",
                  "import": "./src/index.ts",
                  "default": "./src/index.ts"
                },
                "./package.json": "./package.json"
              },
              "packageMain": "./src/index.ts",
              "isInPackageManagerWorkspaces": true
            }
          },
          "$schema": "../../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "libs/langgraph-modules/memory/src",
          "implicitDependencies": []
        }
      },
      "langgraph-modules/core": {
        "name": "langgraph-modules/core",
        "type": "lib",
        "data": {
          "root": "libs/langgraph-modules/core",
          "projectType": "library",
          "targets": {
            "typecheck": {
              "dependsOn": ["build", "^typecheck"],
              "options": {
                "cwd": "libs/langgraph-modules/core",
                "command": "tsc --build --emitDeclarationOnly"
              },
              "cache": true,
              "inputs": [
                "production",
                "^production",
                {
                  "externalDependencies": ["typescript"]
                }
              ],
              "outputs": [
                "{projectRoot}/**/*.js",
                "{projectRoot}/**/*.cjs",
                "{projectRoot}/**/*.mjs",
                "{projectRoot}/**/*.jsx",
                "{projectRoot}/**/*.js.map",
                "{projectRoot}/**/*.jsx.map",
                "{projectRoot}/**/*.d.ts",
                "{projectRoot}/**/*.d.cts",
                "{projectRoot}/**/*.d.mts",
                "{projectRoot}/**/*.d.ts.map",
                "{projectRoot}/**/*.d.cts.map",
                "{projectRoot}/**/*.d.mts.map",
                "{projectRoot}/tsconfig.tsbuildinfo",
                "{projectRoot}/dist/**/*.d.ts",
                "{projectRoot}/dist/tsconfig.lib.tsbuildinfo",
                "{projectRoot}/out-tsc/jest/**/*.d.ts",
                "{projectRoot}/out-tsc/jest/tsconfig.tsbuildinfo"
              ],
              "syncGenerators": ["@nx/js:typescript-sync"],
              "metadata": {
                "technologies": ["typescript"],
                "description": "Runs type-checking for the project.",
                "help": {
                  "command": "npx tsc --build --help",
                  "example": {
                    "args": ["--force"]
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/js:tsc",
              "outputs": ["{options.outputPath}"],
              "options": {
                "outputPath": "dist/libs/langgraph-modules/core",
                "tsConfig": "libs/langgraph-modules/core/tsconfig.lib.json",
                "packageJson": "libs/langgraph-modules/core/package.json",
                "main": "libs/langgraph-modules/core/src/index.ts",
                "assets": ["libs/langgraph-modules/core/*.md"]
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "dependsOn": ["^build"],
              "inputs": ["production", "^production"]
            },
            "build-deps": {
              "dependsOn": ["^build"],
              "configurations": {},
              "options": {},
              "parallelism": true,
              "executor": "nx:noop"
            },
            "watch-deps": {
              "continuous": true,
              "dependsOn": ["build-deps"],
              "executor": "nx:run-commands",
              "options": {
                "command": "npx nx watch --projects langgraph-modules/core --includeDependentProjects -- npx nx build-deps langgraph-modules/core"
              },
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "cache": true,
              "options": {
                "cwd": "libs/langgraph-modules/core",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{workspaceRoot}/libs/langgraph-modules/core/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": ["eslint"]
                }
              ],
              "outputs": ["{options.outputFile}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "npx eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "options": {
                "cwd": "libs/langgraph-modules/core",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "npx jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}\\jest.preset.js",
                {
                  "externalDependencies": ["jest"]
                }
              ],
              "outputs": ["{projectRoot}\\test-output\\jest\\coverage"],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["^build"]
            }
          },
          "name": "langgraph-modules/core",
          "tags": ["npm:private", "scope:langgraph"],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@langgraph-modules/core",
              "packageExports": {
                "./package.json": "./package.json",
                ".": {
                  "development": "./src/index.ts",
                  "types": "./dist/index.d.ts",
                  "import": "./dist/index.js",
                  "default": "./dist/index.js"
                }
              },
              "packageMain": "./dist/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "implicitDependencies": []
        }
      },
      "langgraph-modules/hitl": {
        "name": "langgraph-modules/hitl",
        "type": "lib",
        "data": {
          "root": "libs/langgraph-modules/hitl",
          "projectType": "library",
          "targets": {
            "typecheck": {
              "dependsOn": ["build", "^typecheck"],
              "options": {
                "cwd": "libs/langgraph-modules/hitl",
                "command": "tsc --build --emitDeclarationOnly"
              },
              "cache": true,
              "inputs": [
                "production",
                "^production",
                {
                  "externalDependencies": ["typescript"]
                }
              ],
              "outputs": [
                "{projectRoot}/**/*.js",
                "{projectRoot}/**/*.cjs",
                "{projectRoot}/**/*.mjs",
                "{projectRoot}/**/*.jsx",
                "{projectRoot}/**/*.js.map",
                "{projectRoot}/**/*.jsx.map",
                "{projectRoot}/**/*.d.ts",
                "{projectRoot}/**/*.d.cts",
                "{projectRoot}/**/*.d.mts",
                "{projectRoot}/**/*.d.ts.map",
                "{projectRoot}/**/*.d.cts.map",
                "{projectRoot}/**/*.d.mts.map",
                "{projectRoot}/tsconfig.tsbuildinfo",
                "{projectRoot}/dist/**/*.d.ts",
                "{projectRoot}/dist/tsconfig.lib.tsbuildinfo",
                "{projectRoot}/out-tsc/jest/**/*.d.ts",
                "{projectRoot}/out-tsc/jest/tsconfig.tsbuildinfo"
              ],
              "syncGenerators": ["@nx/js:typescript-sync"],
              "metadata": {
                "technologies": ["typescript"],
                "description": "Runs type-checking for the project.",
                "help": {
                  "command": "npx tsc --build --help",
                  "example": {
                    "args": ["--force"]
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/js:tsc",
              "outputs": ["{options.outputPath}"],
              "options": {
                "outputPath": "dist/libs/langgraph-modules/hitl",
                "tsConfig": "libs/langgraph-modules/hitl/tsconfig.lib.json",
                "packageJson": "libs/langgraph-modules/hitl/package.json",
                "main": "libs/langgraph-modules/hitl/src/index.ts",
                "assets": ["libs/langgraph-modules/hitl/*.md"]
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "dependsOn": ["^build"],
              "inputs": ["production", "^production"]
            },
            "build-deps": {
              "dependsOn": ["^build"],
              "configurations": {},
              "options": {},
              "parallelism": true,
              "executor": "nx:noop"
            },
            "watch-deps": {
              "continuous": true,
              "dependsOn": ["build-deps"],
              "executor": "nx:run-commands",
              "options": {
                "command": "npx nx watch --projects langgraph-modules/hitl --includeDependentProjects -- npx nx build-deps langgraph-modules/hitl"
              },
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "cache": true,
              "options": {
                "cwd": "libs/langgraph-modules/hitl",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{workspaceRoot}/libs/langgraph-modules/hitl/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": ["eslint"]
                }
              ],
              "outputs": ["{options.outputFile}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "npx eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "options": {
                "cwd": "libs/langgraph-modules/hitl",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "npx jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}\\jest.preset.js",
                {
                  "externalDependencies": ["jest"]
                }
              ],
              "outputs": ["{projectRoot}\\test-output\\jest\\coverage"],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["^build"]
            }
          },
          "name": "langgraph-modules/hitl",
          "tags": [
            "npm:private",
            "domain:langgraph",
            "type:data-access",
            "module:checkpoint"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@langgraph-modules/hitl",
              "packageExports": {
                "./package.json": "./package.json",
                ".": {
                  "development": "./src/index.ts",
                  "types": "./dist/index.d.ts",
                  "import": "./dist/index.js",
                  "default": "./dist/index.js"
                }
              },
              "packageMain": "./dist/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "$schema": "../../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "libs/langgraph-modules/hitl/src",
          "implicitDependencies": []
        }
      },
      "ai-saas-frontend": {
        "name": "ai-saas-frontend",
        "type": "app",
        "data": {
          "root": "apps/ai-saas-frontend",
          "projectType": "application",
          "targets": {
            "typecheck": {
              "dependsOn": ["^typecheck"],
              "options": {
                "cwd": "apps/ai-saas-frontend",
                "command": "tsc --build --emitDeclarationOnly"
              },
              "cache": true,
              "inputs": [
                "production",
                "^production",
                {
                  "externalDependencies": ["typescript"]
                }
              ],
              "outputs": [
                "{projectRoot}/**/*.js",
                "{projectRoot}/**/*.cjs",
                "{projectRoot}/**/*.mjs",
                "{projectRoot}/**/*.jsx",
                "{projectRoot}/**/*.js.map",
                "{projectRoot}/**/*.jsx.map",
                "{projectRoot}/**/*.d.ts",
                "{projectRoot}/**/*.d.cts",
                "{projectRoot}/**/*.d.mts",
                "{projectRoot}/**/*.d.ts.map",
                "{projectRoot}/**/*.d.cts.map",
                "{projectRoot}/**/*.d.mts.map",
                "{projectRoot}/tsconfig.tsbuildinfo",
                "{workspaceRoot}/dist/out-tsc/**/*.d.ts",
                "{workspaceRoot}/dist/out-tsc/tsconfig.tsbuildinfo"
              ],
              "syncGenerators": ["@nx/js:typescript-sync"],
              "metadata": {
                "technologies": ["typescript"],
                "description": "Runs type-checking for the project.",
                "help": {
                  "command": "npx tsc --build --help",
                  "example": {
                    "args": ["--force"]
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "executor": "@nx/eslint:lint",
              "options": {},
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@angular-devkit/build-angular:browser",
              "outputs": ["{options.outputPath}"],
              "options": {
                "outputPath": "dist/apps/ai-saas-frontend",
                "index": "apps/ai-saas-frontend/src/index.html",
                "main": "apps/ai-saas-frontend/src/main.ts",
                "polyfills": ["zone.js"],
                "tsConfig": "apps/ai-saas-frontend/tsconfig.app.json",
                "inlineStyleLanguage": "scss",
                "assets": [
                  "apps/ai-saas-frontend/src/favicon.ico",
                  "apps/ai-saas-frontend/src/assets"
                ],
                "styles": ["apps/ai-saas-frontend/src/styles.scss"],
                "scripts": []
              },
              "configurations": {
                "production": {
                  "budgets": [
                    {
                      "type": "initial",
                      "maximumWarning": "500kb",
                      "maximumError": "1mb"
                    },
                    {
                      "type": "anyComponentStyle",
                      "maximumWarning": "2kb",
                      "maximumError": "4kb"
                    }
                  ],
                  "outputHashing": "all"
                },
                "development": {
                  "buildOptimizer": false,
                  "optimization": false,
                  "vendorChunk": true,
                  "extractLicenses": false,
                  "sourceMap": true,
                  "namedChunks": true
                }
              },
              "defaultConfiguration": "production",
              "parallelism": true
            },
            "serve": {
              "executor": "@angular-devkit/build-angular:dev-server",
              "configurations": {
                "production": {
                  "buildTarget": "ai-saas-frontend:build:production"
                },
                "development": {
                  "buildTarget": "ai-saas-frontend:build:development"
                }
              },
              "defaultConfiguration": "development",
              "options": {
                "proxyConfig": "apps/ai-saas-frontend/proxy.conf.json"
              },
              "parallelism": true
            },
            "extract-i18n": {
              "executor": "@angular-devkit/build-angular:extract-i18n",
              "options": {
                "buildTarget": "ai-saas-frontend:build"
              },
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "executor": "@nx/jest:jest",
              "outputs": ["{workspaceRoot}/coverage/{projectRoot}"],
              "options": {
                "jestConfig": "apps/ai-saas-frontend/jest.config.ts"
              },
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["^build"]
            }
          },
          "name": "ai-saas-frontend",
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "prefix": "app",
          "sourceRoot": "apps/ai-saas-frontend/src",
          "tags": ["scope:frontend", "type:app"],
          "implicitDependencies": []
        }
      },
      "nestjs-langgraph": {
        "name": "nestjs-langgraph",
        "type": "lib",
        "data": {
          "root": "libs/langgraph-modules/nestjs-langgraph",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "libs/langgraph-modules/nestjs-langgraph",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{workspaceRoot}/libs/langgraph-modules/nestjs-langgraph/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": ["eslint"]
                }
              ],
              "outputs": ["{options.outputFile}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "npx eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "options": {
                "cwd": "libs/langgraph-modules/nestjs-langgraph",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "npx jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}\\jest.preset.js",
                {
                  "externalDependencies": ["jest"]
                }
              ],
              "outputs": ["{projectRoot}\\test-output\\jest\\coverage"],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["^build"]
            },
            "typecheck": {
              "dependsOn": ["^typecheck"],
              "options": {
                "cwd": "libs/langgraph-modules/nestjs-langgraph",
                "command": "tsc --build --emitDeclarationOnly"
              },
              "cache": true,
              "inputs": [
                "production",
                {
                  "dependentTasksOutputFiles": "**/*.d.ts"
                },
                {
                  "externalDependencies": ["typescript"]
                }
              ],
              "outputs": [
                "{projectRoot}/**/*.js",
                "{projectRoot}/**/*.cjs",
                "{projectRoot}/**/*.mjs",
                "{projectRoot}/**/*.jsx",
                "{projectRoot}/**/*.js.map",
                "{projectRoot}/**/*.jsx.map",
                "{projectRoot}/**/*.d.ts",
                "{projectRoot}/**/*.d.cts",
                "{projectRoot}/**/*.d.mts",
                "{projectRoot}/**/*.d.ts.map",
                "{projectRoot}/**/*.d.cts.map",
                "{projectRoot}/**/*.d.mts.map",
                "{projectRoot}/tsconfig.tsbuildinfo",
                "{projectRoot}/dist/**/*.d.ts",
                "{projectRoot}/dist/tsconfig.lib.tsbuildinfo",
                "{workspaceRoot}/libs/langgraph-modules/monitoring/dist/**/*.d.ts",
                "{workspaceRoot}/libs/langgraph-modules/monitoring/dist/tsconfig.lib.tsbuildinfo",
                "{workspaceRoot}/libs/langgraph-modules/time-travel/dist/**/*.d.ts",
                "{workspaceRoot}/libs/langgraph-modules/time-travel/dist/tsconfig.lib.tsbuildinfo",
                "{workspaceRoot}/libs/langgraph-modules/checkpoint/dist/**/*.d.ts",
                "{workspaceRoot}/libs/langgraph-modules/checkpoint/dist/tsconfig.lib.tsbuildinfo",
                "{workspaceRoot}/libs/langgraph-modules/platform/dist/**/*.d.ts",
                "{workspaceRoot}/libs/langgraph-modules/platform/dist/tsconfig.lib.tsbuildinfo",
                "{workspaceRoot}/libs/langgraph-modules/memory/dist/**/*.d.ts",
                "{workspaceRoot}/libs/langgraph-modules/memory/dist/tsconfig.lib.tsbuildinfo",
                "{workspaceRoot}/libs/langgraph-modules/functional-api/dist/**/*.d.ts",
                "{workspaceRoot}/libs/langgraph-modules/functional-api/dist/tsconfig.lib.tsbuildinfo",
                "{workspaceRoot}/libs/langgraph-modules/multi-agent/dist/**/*.d.ts",
                "{workspaceRoot}/libs/langgraph-modules/multi-agent/dist/tsconfig.lib.tsbuildinfo",
                "{projectRoot}/out-tsc/jest/**/*.d.ts",
                "{projectRoot}/out-tsc/jest/tsconfig.tsbuildinfo"
              ],
              "syncGenerators": ["@nx/js:typescript-sync"],
              "metadata": {
                "technologies": ["typescript"],
                "description": "Runs type-checking for the project.",
                "help": {
                  "command": "npx tsc --build --help",
                  "example": {
                    "args": ["--force"]
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": ["^nx-release-publish"],
              "options": {},
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/js:tsc",
              "outputs": ["{options.outputPath}"],
              "options": {
                "outputPath": "dist/libs/langgraph-modules/nestjs-langgraph",
                "main": "libs/langgraph-modules/nestjs-langgraph/src/index.ts",
                "tsConfig": "libs/langgraph-modules/nestjs-langgraph/tsconfig.lib.json",
                "assets": [
                  "libs/langgraph-modules/nestjs-langgraph/*.md",
                  {
                    "input": "./libs/langgraph-modules/nestjs-langgraph",
                    "glob": "**/*.!(ts)",
                    "output": "./"
                  }
                ]
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "dependsOn": ["^build"],
              "inputs": ["production", "^production"]
            },
            "publish": {
              "executor": "nx:run-commands",
              "options": {
                "command": "npm publish dist/libs/langgraph-modules/nestjs-langgraph --access public"
              },
              "dependsOn": ["build"],
              "configurations": {},
              "parallelism": true
            },
            "docs": {
              "executor": "nx:run-commands",
              "options": {
                "command": "typedoc --options typedoc.json",
                "cwd": "libs/langgraph-modules/nestjs-langgraph"
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "projectType": "library",
          "name": "nestjs-langgraph",
          "tags": [
            "npm:public",
            "npm:nestjs",
            "npm:langgraph",
            "npm:ai-agents",
            "npm:workflows",
            "npm:langchain",
            "npm:ai",
            "npm:machine-learning",
            "npm:typescript",
            "domain:langgraph",
            "type:data-access"
          ],
          "metadata": {
            "targetGroups": {},
            "description": "NestJS integration for LangGraph AI agent workflows with comprehensive TypeScript support",
            "js": {
              "packageName": "@hive-academy/nestjs-langgraph",
              "packageExports": {
                "./package.json": "./package.json",
                ".": {
                  "development": "./src/index.ts",
                  "types": "./dist/index.d.ts",
                  "import": "./dist/index.js",
                  "default": "./dist/index.js"
                }
              },
              "packageMain": "./dist/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "libs/langgraph-modules/nestjs-langgraph/src",
          "implicitDependencies": []
        }
      },
      "nestjs-chromadb": {
        "name": "nestjs-chromadb",
        "type": "lib",
        "data": {
          "root": "libs/nestjs-chromadb",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "libs/nestjs-chromadb",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{workspaceRoot}/libs/nestjs-chromadb/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": ["eslint"]
                }
              ],
              "outputs": ["{options.outputFile}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "npx eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "options": {
                "cwd": "libs/nestjs-chromadb",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "npx jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}\\jest.preset.js",
                {
                  "externalDependencies": ["jest"]
                }
              ],
              "outputs": ["{projectRoot}\\test-output\\jest\\coverage"],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["^build"]
            },
            "typecheck": {
              "dependsOn": ["^typecheck"],
              "options": {
                "cwd": "libs/nestjs-chromadb",
                "command": "tsc --build --emitDeclarationOnly"
              },
              "cache": true,
              "inputs": [
                "production",
                {
                  "dependentTasksOutputFiles": "**/*.d.ts"
                },
                {
                  "externalDependencies": ["typescript"]
                }
              ],
              "outputs": [
                "{projectRoot}/**/*.js",
                "{projectRoot}/**/*.cjs",
                "{projectRoot}/**/*.mjs",
                "{projectRoot}/**/*.jsx",
                "{projectRoot}/**/*.js.map",
                "{projectRoot}/**/*.jsx.map",
                "{projectRoot}/**/*.d.ts",
                "{projectRoot}/**/*.d.cts",
                "{projectRoot}/**/*.d.mts",
                "{projectRoot}/**/*.d.ts.map",
                "{projectRoot}/**/*.d.cts.map",
                "{projectRoot}/**/*.d.mts.map",
                "{projectRoot}/tsconfig.tsbuildinfo",
                "{projectRoot}/out-tsc/jest/**/*.d.ts",
                "{projectRoot}/out-tsc/jest/tsconfig.tsbuildinfo"
              ],
              "syncGenerators": ["@nx/js:typescript-sync"],
              "metadata": {
                "technologies": ["typescript"],
                "description": "Runs type-checking for the project.",
                "help": {
                  "command": "npx tsc --build --help",
                  "example": {
                    "args": ["--force"]
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": ["^nx-release-publish"],
              "options": {},
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/js:tsc",
              "outputs": ["{options.outputPath}"],
              "options": {
                "outputPath": "dist/libs/nestjs-chromadb",
                "main": "libs/nestjs-chromadb/src/index.ts",
                "tsConfig": "libs/nestjs-chromadb/tsconfig.lib.json",
                "assets": [
                  "libs/nestjs-chromadb/*.md",
                  {
                    "input": "./libs/nestjs-chromadb",
                    "glob": "**/*.!(ts)",
                    "output": "./"
                  }
                ]
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "dependsOn": ["^build"],
              "inputs": ["production", "^production"]
            },
            "publish": {
              "executor": "nx:run-commands",
              "options": {
                "command": "npm publish dist/libs/nestjs-chromadb --access public"
              },
              "dependsOn": ["build"],
              "configurations": {},
              "parallelism": true
            },
            "docs": {
              "executor": "nx:run-commands",
              "options": {
                "command": "typedoc --options typedoc.json",
                "cwd": "libs/nestjs-chromadb"
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "projectType": "library",
          "name": "nestjs-chromadb",
          "tags": [
            "npm:public",
            "npm:nestjs",
            "npm:chromadb",
            "npm:vector-database",
            "npm:embeddings",
            "npm:ai",
            "npm:machine-learning",
            "npm:typescript",
            "domain:chromadb",
            "type:data-access"
          ],
          "metadata": {
            "targetGroups": {},
            "description": "NestJS integration for ChromaDB vector database with comprehensive TypeScript support",
            "js": {
              "packageName": "@hive-academy/nestjs-chromadb",
              "packageExports": {
                "./package.json": "./package.json",
                ".": {
                  "development": "./src/index.ts",
                  "types": "./dist/index.d.ts",
                  "import": "./dist/index.js",
                  "default": "./dist/index.js"
                }
              },
              "packageMain": "./dist/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "libs/nestjs-chromadb/src",
          "implicitDependencies": []
        }
      },
      "nestjs-neo4j": {
        "name": "nestjs-neo4j",
        "type": "lib",
        "data": {
          "root": "libs/nestjs-neo4j",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "libs/nestjs-neo4j",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{workspaceRoot}/libs/nestjs-neo4j/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": ["eslint"]
                }
              ],
              "outputs": ["{options.outputFile}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "npx eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "options": {
                "cwd": "libs/nestjs-neo4j",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "npx jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}\\jest.preset.js",
                {
                  "externalDependencies": ["jest"]
                }
              ],
              "outputs": ["{projectRoot}\\test-output\\jest\\coverage"],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["^build"]
            },
            "typecheck": {
              "dependsOn": ["^typecheck"],
              "options": {
                "cwd": "libs/nestjs-neo4j",
                "command": "tsc --build --emitDeclarationOnly"
              },
              "cache": true,
              "inputs": [
                "production",
                {
                  "dependentTasksOutputFiles": "**/*.d.ts"
                },
                {
                  "externalDependencies": ["typescript"]
                }
              ],
              "outputs": [
                "{projectRoot}/**/*.js",
                "{projectRoot}/**/*.cjs",
                "{projectRoot}/**/*.mjs",
                "{projectRoot}/**/*.jsx",
                "{projectRoot}/**/*.js.map",
                "{projectRoot}/**/*.jsx.map",
                "{projectRoot}/**/*.d.ts",
                "{projectRoot}/**/*.d.cts",
                "{projectRoot}/**/*.d.mts",
                "{projectRoot}/**/*.d.ts.map",
                "{projectRoot}/**/*.d.cts.map",
                "{projectRoot}/**/*.d.mts.map",
                "{projectRoot}/tsconfig.tsbuildinfo",
                "{projectRoot}/out-tsc/jest/**/*.d.ts",
                "{projectRoot}/out-tsc/jest/tsconfig.tsbuildinfo"
              ],
              "syncGenerators": ["@nx/js:typescript-sync"],
              "metadata": {
                "technologies": ["typescript"],
                "description": "Runs type-checking for the project.",
                "help": {
                  "command": "npx tsc --build --help",
                  "example": {
                    "args": ["--force"]
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": ["^nx-release-publish"],
              "options": {},
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/js:tsc",
              "outputs": ["{options.outputPath}"],
              "options": {
                "outputPath": "dist/libs/nestjs-neo4j",
                "main": "libs/nestjs-neo4j/src/index.ts",
                "tsConfig": "libs/nestjs-neo4j/tsconfig.lib.json",
                "assets": [
                  "libs/nestjs-neo4j/*.md",
                  {
                    "input": "./libs/nestjs-neo4j",
                    "glob": "**/*.!(ts)",
                    "output": "./"
                  }
                ]
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "dependsOn": ["^build"],
              "inputs": ["production", "^production"]
            },
            "publish": {
              "executor": "nx:run-commands",
              "options": {
                "command": "npm publish dist/libs/nestjs-neo4j --access public"
              },
              "dependsOn": ["build"],
              "configurations": {},
              "parallelism": true
            },
            "docs": {
              "executor": "nx:run-commands",
              "options": {
                "command": "typedoc --options typedoc.json",
                "cwd": "libs/nestjs-neo4j"
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "projectType": "library",
          "name": "nestjs-neo4j",
          "tags": [
            "npm:public",
            "npm:nestjs",
            "npm:neo4j",
            "npm:graph-database",
            "npm:cypher",
            "npm:relationships",
            "npm:typescript",
            "domain:neo4j",
            "type:data-access"
          ],
          "metadata": {
            "targetGroups": {},
            "description": "NestJS integration for Neo4j graph database with comprehensive TypeScript support",
            "js": {
              "packageName": "@hive-academy/nestjs-neo4j",
              "packageExports": {
                "./package.json": "./package.json",
                ".": {
                  "development": "./src/index.ts",
                  "types": "./dist/index.d.ts",
                  "import": "./dist/index.js",
                  "default": "./dist/index.js"
                }
              },
              "packageMain": "./dist/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "libs/nestjs-neo4j/src",
          "implicitDependencies": []
        }
      }
    },
    "dependencies": {
      "langgraph-modules/workflow-engine": [],
      "langgraph-modules/functional-api": [
        {
          "source": "langgraph-modules/functional-api",
          "target": "langgraph-modules/checkpoint",
          "type": "static"
        }
      ],
      "dev-brand-api-e2e": [
        {
          "source": "dev-brand-api-e2e",
          "target": "dev-brand-api",
          "type": "implicit"
        }
      ],
      "langgraph-modules/multi-agent": [],
      "langgraph-modules/time-travel": [
        {
          "source": "langgraph-modules/time-travel",
          "target": "langgraph-modules/checkpoint",
          "type": "static"
        }
      ],
      "langgraph-modules/checkpoint": [],
      "langgraph-modules/monitoring": [],
      "dev-brand-api": [
        {
          "source": "dev-brand-api",
          "target": "nestjs-chromadb",
          "type": "static"
        },
        {
          "source": "dev-brand-api",
          "target": "nestjs-langgraph",
          "type": "static"
        },
        {
          "source": "dev-brand-api",
          "target": "nestjs-neo4j",
          "type": "static"
        }
      ],
      "langgraph-modules/streaming": [],
      "langgraph-modules/platform": [],
      "langgraph-modules/memory": [
        {
          "source": "langgraph-modules/memory",
          "target": "nestjs-chromadb",
          "type": "static"
        },
        {
          "source": "langgraph-modules/memory",
          "target": "nestjs-neo4j",
          "type": "static"
        }
      ],
      "langgraph-modules/core": [],
      "langgraph-modules/hitl": [],
      "ai-saas-frontend": [],
      "nestjs-langgraph": [
        {
          "source": "nestjs-langgraph",
          "target": "langgraph-modules/core",
          "type": "static"
        },
        {
          "source": "nestjs-langgraph",
          "target": "langgraph-modules/multi-agent",
          "type": "static"
        },
        {
          "source": "nestjs-langgraph",
          "target": "langgraph-modules/functional-api",
          "type": "static"
        },
        {
          "source": "nestjs-langgraph",
          "target": "langgraph-modules/hitl",
          "type": "static"
        },
        {
          "source": "nestjs-langgraph",
          "target": "langgraph-modules/streaming",
          "type": "static"
        },
        {
          "source": "nestjs-langgraph",
          "target": "langgraph-modules/workflow-engine",
          "type": "static"
        },
        {
          "source": "nestjs-langgraph",
          "target": "langgraph-modules/memory",
          "type": "static"
        },
        {
          "source": "nestjs-langgraph",
          "target": "langgraph-modules/checkpoint",
          "type": "static"
        },
        {
          "source": "nestjs-langgraph",
          "target": "langgraph-modules/platform",
          "type": "static"
        },
        {
          "source": "nestjs-langgraph",
          "target": "langgraph-modules/time-travel",
          "type": "static"
        },
        {
          "source": "nestjs-langgraph",
          "target": "langgraph-modules/monitoring",
          "type": "static"
        }
      ],
      "nestjs-chromadb": [],
      "nestjs-neo4j": []
    }
  }
}
