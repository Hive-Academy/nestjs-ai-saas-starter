name: PR Checks

on:
  pull_request:
    branches:
      - main
    types: [opened, synchronize, reopened, ready_for_review]

permissions:
  contents: read
  pull-requests: write
  checks: write

jobs:

  security:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm i

      - name: Run security audit
        run: npm audit --audit-level=moderate

      - name: Check for vulnerabilities in dependencies
        run: |
          echo "Checking for known vulnerabilities..."
          if npm audit --audit-level=high --json | jq -e '.vulnerabilities | length > 0' > /dev/null 2>&1; then
            echo "‚ùå High severity vulnerabilities found"
            npm audit --audit-level=high
            exit 1
          else
            echo "‚úÖ No high severity vulnerabilities found"
          fi

  size-check:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm i

      - name: Build libraries
        run: npx nx run-many -t build -p nestjs-chromadb,nestjs-neo4j,nestjs-langgraph,shared

      - name: Check bundle sizes
        run: |
          echo "üì¶ Checking bundle sizes..."
          for lib in nestjs-chromadb nestjs-neo4j nestjs-langgraph shared; do
            if [ -d "dist/libs/$lib" ]; then
              size=$(du -sh "dist/libs/$lib" | cut -f1)
              echo "üìä @hive-academy/$lib: $size"

              # Warn if bundle is larger than 1MB
              size_bytes=$(du -sb "dist/libs/$lib" | cut -f1)
              if [ "$size_bytes" -gt 1048576 ]; then
                echo "‚ö†Ô∏è  Warning: @hive-academy/$lib bundle size is larger than 1MB"
              fi
            fi
          done

  comment-pr:
    runs-on: ubuntu-latest
    needs: [security, size-check]
    if: always()

    steps:
      - name: Comment PR
        uses: actions/github-script@v7
        with:
          script: |
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });

            const botComment = comments.find(comment =>
              comment.user.type === 'Bot' && comment.body.includes('## PR Checks Summary')
            );


            const security = '${{ needs.security.result }}';
            const sizeCheck = '${{ needs.size-check.result }}';

            const getEmoji = (result) => {
              switch(result) {
                case 'success': return '‚úÖ';
                case 'failure': return '‚ùå';
                case 'cancelled': return '‚èπÔ∏è';
                default: return '‚è≥';
              }
            };

            const body = `## PR Checks Summary


            ${getEmoji(security)} **Security**: ${security}
            ${getEmoji(sizeCheck)} **Size Check**: ${sizeCheck}

            ${security === 'success' && sizeCheck === 'success'
              ? 'üéâ All checks passed! This PR is ready for review.'
              : '‚ö†Ô∏è Some checks failed. Please review the workflow logs.'}

            ---
            *This comment is automatically updated by the PR Checks workflow.*`;

            if (botComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: body
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: body
              });
            }
